{"version":3,"sources":["components/navigation/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/person/Person.tsx","components/people/People.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","sex","pathname","name","replaceAll","born","People","useState","listPeople","setListPeople","error","setError","hash","useLocation","useEffect","res","catch","sheMother","filter","el","motherName","length","emptyName","map","includes","died","fatherName","slug","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1539400a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person:Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <td>\n      <Link\n        className={classNames('', {\n          'has-text-danger': person.sex === 'f',\n        })}\n        to={{\n          pathname: `#/people/${person.name.replaceAll(' ', '-')}-${person.born}`,\n        }}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from '../person/Person';\n\nexport const People: React.FC = () => {\n  const [listPeople, setListPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const { hash } = useLocation();\n\n  useEffect(() => {\n    getPeople()\n      .then((res: Person[]) => setListPeople(res))\n      .catch(() => setError(true));\n  }, []);\n\n  const sheMother = (person:Person) => {\n    return listPeople\n      .filter(\n        (el: Person) => el.name === person.motherName,\n      ).length;\n  };\n\n  const isActive = (name: string) => {\n    return hash.replaceAll('-', ' ').includes(name);\n  };\n\n  const emptyName = (person:Person) => {\n    return person.motherName ? person.motherName : '-';\n  };\n\n  return (\n    <div className=\"block\">\n      <h2 className=\"title\">People Page</h2>\n      <div className=\"box table-container\">\n        {listPeople.length < 1 && !error\n          ? <Loader />\n          : (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!error && !listPeople.length\n                    && (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )}\n\n              {listPeople.length > 0\n                            && (\n                              <table\n                                data-cy=\"peopleTable\"\n                                className=\"\n                    table is-striped\n                    is-hoverable is-narrow is-fullwidth\"\n                              >\n                                <thead>\n                                  <tr>\n                                    <th>Name</th>\n                                    <th>Sex</th>\n                                    <th>Born</th>\n                                    <th>Died</th>\n                                    <th>Mother</th>\n                                    <th>Father</th>\n                                  </tr>\n                                </thead>\n\n                                <tbody>\n                                  {listPeople.map((person: Person) => (\n                                    <tr\n                                      data-cy=\"person\"\n                                      className={classNames('', {\n                                        'has-background-warning':\n                                            isActive(person.name),\n                                      })}\n                                      key={person.slug}\n                                    >\n                                      <PersonLink person={person} />\n\n                                      <td>{person.sex}</td>\n                                      <td>{person.born}</td>\n                                      <td>{person.died}</td>\n                                      <td>\n                                        {sheMother(person) ? (\n                                          <Link\n                                            className=\"has-text-danger\"\n                                            to={{\n                                              pathname: `#/people/${person.name.replaceAll(' ', '-')}-${person.born}`,\n                                            }}\n                                          >\n                                            {person.motherName}\n                                          </Link>\n                                        ) : emptyName(person)}\n\n                                      </td>\n                                      <td>\n                                        {!person.fatherName\n                                          ? '-'\n                                          : person.fatherName}\n\n                                      </td>\n                                    </tr>\n                                  ))}\n                                </tbody>\n                              </table>\n                            )}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/navigation/Navigation';\nimport { People } from './components/people/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"/people\" element={<People />}>\n            <Route path=\":slug\" element={<People />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}