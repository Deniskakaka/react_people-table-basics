{"version":3,"sources":["components/navigation/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/people/People.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","classNames","to","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","People","useState","listPeople","setListPeople","error","setError","useEffect","res","catch","length","map","person","href","name","sex","born","died","motherName","fatherName","slug","App","path","element","createRoot","document","getElementById","render"],"mappings":"yQAIaA,EAAuB,WAClC,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAGXE,GAAG,IAJL,kBAQA,cAAC,IAAD,CACEJ,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAGXE,GAAG,UAJL,0BAYT,E,OC/BKC,EAAU,oEAMT,SAASC,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MAAMP,EAAZ,IACLM,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKf,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECGTgB,EAAmB,WAC9B,MAAoCC,mBAAmB,IAAvD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAQA,OANAC,qBAAU,WACRhB,IACGK,MAAK,SAACY,GAAD,OAAmBJ,EAAcI,EAAjC,IACLC,OAAM,kBAAMH,GAAS,EAAf,GACV,GAAE,IAGD,qBAAKrB,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SACGkB,EAAWO,OAAS,IAAML,EACvB,cAAC,EAAD,IAEA,qCACGA,GACC,mBAAG,UAAQ,qBAAqBpB,UAAU,kBAA1C,mCAKAoB,GAASF,EAAWO,OAAS,GAEvB,mBAAG,UAAQ,kBAAX,+CAKPP,EAAWO,OAAS,GAEL,wBACE,UAAQ,cACRzB,UAAU,wDAFZ,UAME,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGkB,EAAWQ,KAAI,SAACC,GACf,OACE,qBAAI,UAAQ,SAAZ,UACE,6BACE,mBACEC,KAAK,gCADP,SAGGD,EAAOE,SAIZ,6BAAKF,EAAOG,MACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,OACZ,6BAAKL,EAAOM,aACZ,6BAAKN,EAAOO,eAbYP,EAAOQ,KAgBpC,eASlC,EC7EYC,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAMpC,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqC,KAAK,IAAIC,QAAS,oBAAItC,UAAU,QAAd,8BACzB,cAAC,IAAD,CAAOqC,KAAK,IAAIC,QAAS,oBAAItC,UAAU,QAAd,yBACzB,cAAC,IAAD,CAAOqC,KAAK,UAAUC,QAAS,cAAC,EAAD,eATtB,ECGnBC,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.0bff322c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\n\nexport const People: React.FC = () => {\n  const [listPeople, setListPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((res: Person[]) => setListPeople(res))\n      .catch(() => setError(true));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {listPeople.length < 1 && !error\n          ? <Loader />\n          : (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!error && listPeople.length < 1\n                    && (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )}\n\n              {listPeople.length > 0\n                            && (\n                              <table\n                                data-cy=\"peopleTable\"\n                                className=\"\n                    table is-striped\n                    is-hoverable is-narrow is-fullwidth\"\n                              >\n                                <thead>\n                                  <tr>\n                                    <th>Name</th>\n                                    <th>Sex</th>\n                                    <th>Born</th>\n                                    <th>Died</th>\n                                    <th>Mother</th>\n                                    <th>Father</th>\n                                  </tr>\n                                </thead>\n\n                                <tbody>\n                                  {listPeople.map((person: Person) => {\n                                    return (\n                                      <tr data-cy=\"person\" key={person.slug}>\n                                        <td>\n                                          <a\n                                            href=\"#/people/jan-van-brussel-1714\"\n                                          >\n                                            {person.name}\n                                          </a>\n                                        </td>\n\n                                        <td>{person.sex}</td>\n                                        <td>{person.born}</td>\n                                        <td>{person.died}</td>\n                                        <td>{person.motherName}</td>\n                                        <td>{person.fatherName}</td>\n                                      </tr>\n                                    );\n                                  })}\n                                </tbody>\n                              </table>\n                            )}\n            </>\n          )}\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/navigation/Navigation';\nimport { People } from './components/people/People';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/people\" element={<People />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}